init_info[[11]], init_info[[12]], years_v,
init_info[[13]], unlist(init_info[[14]]), init_info[[6]], init_info[[7]],
init_info[[8]], init_info[[9]], init_info[[10]],
hyperparams$alpha_mean, diag(2) * (hyperparams$alpha_scale^2),
hyperparams$delta_mean, diag(2) * (hyperparams$delta_scale^2),
hyperparams$rho_mean, hyperparams$rho_sigma, hyperparams$rho_sd, hyperparams$nu,
iter_config$num_iter, iter_config$start_iter, iter_config$keep_iter,
iter_config$flip_rate, init_info[[15]], init_info[[16]],
init_info[[17]], init_info[[18]])
all_param_draw = draw_info[[1]]
leg_names <- unlist(sapply(1:nrow(vote_m), function(i) {
sapply(init_info[[14]][[i]], function(year) {
paste(rownames(vote_m)[i], "beta", year, sep = "_")
})
}))
if (is.null(colnames(vote_m))) {
colnames(vote_m) <- sapply(1:ncol(vote_m), function(i) {
paste("vote", i, sep = "_")
})
}
alpha_vote_names_1 <- sapply(colnames(vote_m), function(name) {
paste(name, "alpha", "1", sep = "_")
})
alpha_vote_names_2 <- sapply(colnames(vote_m), function(name) {
paste(name, "alpha", "2", sep = "_")
})
delta_vote_names_1 <- sapply(colnames(vote_m), function(name) {
paste(name, "delta", "1", sep = "_")
})
delta_vote_names_2 <- sapply(colnames(vote_m), function(name) {
paste(name, "delta", "2", sep = "_")
})
colnames(all_param_draw) <-
c(leg_names, alpha_vote_names_1, alpha_vote_names_2,
delta_vote_names_1, delta_vote_names_2, "rho")
beta_list <- as.data.frame(all_param_draw[, leg_names])
alpha1_list <- as.data.frame(all_param_draw[, alpha_vote_names_1])
alpha2_list <- as.data.frame(all_param_draw[, alpha_vote_names_2])
delta1_list <- as.data.frame(all_param_draw[, delta_vote_names_1])
delta2_list <- as.data.frame(all_param_draw[, delta_vote_names_2])
rho_list <- as.data.frame(all_param_draw[, "rho"])
colnames(rho_list) <- "rho"
return(c(list(
beta = beta_list,
alpha1 = alpha1_list,
alpha2 = alpha2_list,
delta1 = delta1_list,
delta2 = delta2_list,
rho = rho_list),
other_info = draw_info[-1]
))
}
#' @title initialize three auxiliary parameters y
init_y_star_m <- function(vote_m) {
y_star_m_1 <- vote_m
y_star_m_2 <- vote_m
y_star_m_3 <- vote_m
y_star_m_1[which(vote_m == 1)] = 0
y_star_m_2[which(vote_m == 1)] = 1
y_star_m_3[which(vote_m == 1)] = 0
no_votes <- which(vote_m == 0)
sample_upper <- rbinom(length(no_votes), size = 1, prob = 0.5)
y_star_m_1[no_votes[which(sample_upper == 1)]] = 0
y_star_m_2[no_votes[which(sample_upper == 1)]] = 0
y_star_m_3[no_votes[which(sample_upper == 1)]] = 1
y_star_m_1[no_votes[which(sample_upper == 0)]] = 1
y_star_m_2[no_votes[which(sample_upper == 0)]] = 0
y_star_m_3[no_votes[which(sample_upper == 0)]] = 0
return(list(y_star_m_1, y_star_m_2, y_star_m_3))
}
#' @title initialize member and position parameters and get starting points
init_data_gp_rcpp <- function(
vote_m, years_v, leg_pos_init, alpha_pos_init, delta_pos_init, rho_init,
y_star_m_1_init, y_star_m_2_init, y_star_m_3_init, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list) {
judge_start_inds <- rep(0, nrow(vote_m))
judge_end_inds <- rep(0, nrow(vote_m))
case_judge_years_ind_m <- vote_m
years_served <- rep(0, nrow(vote_m))
judge_year_v <- c()
judge_start_inds <- c()
judge_end_inds <- c()
start_ind = 0
end_ind = 0
for (i in 1:nrow(vote_m)) {
interested_inds <- which(!is.na(vote_m[i,]))
case_judge_years_ind_m[i,interested_inds] <-
years_v[interested_inds] - min(years_v[interested_inds])
judge_year_v <-
c(judge_year_v, list(min(years_v[interested_inds]):max(years_v[interested_inds])))
end_ind = start_ind +
max(years_v[interested_inds]) - min(years_v[interested_inds])
judge_start_inds <- c(judge_start_inds, start_ind)
judge_end_inds <- c(judge_end_inds, end_ind)
start_ind = end_ind + 1
}
if (!is.null(leg_pos_init)) {
leg_pos_m <-
matrix(leg_pos_init, nrow = total_iter, ncol = length(leg_pos_init), byrow = T)
} else {
leg_pos_m <- matrix(0, nrow = total_iter, ncol = max(judge_end_inds) + 1)
}
if (!is.null(alpha_pos_init)) {
alpha_pos_m <-
matrix(t(alpha_pos_init), nrow = total_iter, ncol = 2 * ncol(vote_m), byrow = T)
} else {
alpha_pos_m <-
matrix(rep(c(-1, 1), ncol(vote_m)),
nrow = total_iter, ncol = 2 * ncol(vote_m), byrow = T)
}
if (!is.null(delta_pos_init)) {
delta_pos_m <-
matrix(t(delta_pos_init), nrow = total_iter, ncol = 2 * ncol(vote_m), byrow = T)
} else {
delta_pos_m <-
matrix(0, nrow = total_iter, ncol = 2 * ncol(vote_m), byrow = T)
}
if (!is.null(rho_init)) {
rho_v <- rep(rho_init, nrow = total_iter)
} else {
rho_v <- rep(0.9, nrow = total_iter)
}
if (!is.null(y_star_m_1_init)) {
y_star_m_1 <- y_star_m_1_init
y_star_m_2 <- y_star_m_2_init
y_star_m_3 <- y_star_m_3_init
} else {
y_star_info <- init_y_star_m(vote_m)
y_star_m_1 <- y_star_info[[1]]
y_star_m_2 <- y_star_info[[2]]
y_star_m_3 <- y_star_info[[3]]
}
all_params_draw <- cbind(leg_pos_m, alpha_pos_m, delta_pos_m, rho_v)
beta_start_ind = 0;
alpha_start_ind = max(judge_end_inds) + 1;
alpha_2_start_ind = alpha_start_ind + ncol(vote_m);
delta_start_ind = alpha_2_start_ind + ncol(vote_m);
delta_2_start_ind = delta_start_ind + ncol(vote_m);
rho_start_ind = delta_2_start_ind + ncol(vote_m);
pos_ind_judge_list <- vector(mode = "integer")
pos_ind_judge_year_list <- vector(mode = "integer")
if (length(pos_ind_list) > 0) {
for (i in 1:length(pos_ind_list)) {
tmp_judge_list <-
judge_start_inds[pos_ind_list[i]]:
judge_end_inds[pos_ind_list[i]]
tmp_judge_year_list <- judge_year_v[[pos_ind_list[i]]]
if (length(pos_ind_years_list) > 0) {
tmp_judge_list <- tmp_judge_list[pos_ind_years_list[[i]]]
tmp_judge_year_list <-
tmp_judge_year_list[pos_ind_years_list[[i]]]
}
pos_ind_judge_list <- c(pos_ind_judge_list, tmp_judge_list)
pos_ind_judge_year_list <-
c(pos_ind_judge_year_list, tmp_judge_year_list)
}
}
neg_ind_judge_list <- vector(mode = "integer")
neg_ind_judge_year_list <- vector(mode = "integer")
if (length(neg_ind_list) > 0) {
for (i in 1:length(neg_ind_list)) {
tmp_judge_list <-
judge_start_inds[neg_ind_list[i]]:
judge_end_inds[neg_ind_list[i]]
tmp_judge_year_list <- judge_year_v[[neg_ind_list[i]]]
if (length(neg_ind_years_list) > 0) {
tmp_judge_list <- tmp_judge_list[neg_ind_years_list[[i]]]
tmp_judge_year_list <-
tmp_judge_year_list[neg_ind_years_list[[i]]]
}
neg_ind_judge_list <- c(neg_ind_judge_list, tmp_judge_list)
neg_ind_judge_year_list <-
c(neg_ind_judge_year_list, tmp_judge_year_list)
}
}
return(list(all_params_draw, y_star_m_1, y_star_m_2,
y_star_m_3, beta_start_ind,
alpha_start_ind, alpha_2_start_ind,
delta_start_ind, delta_2_start_ind, rho_start_ind,
judge_start_inds, judge_end_inds,
case_judge_years_ind_m, judge_year_v,
pos_ind_judge_list, neg_ind_judge_list,
pos_ind_judge_year_list, neg_ind_judge_year_list))
}
setwd("E:/OneDrive/UW_Seattle/paper/Abel/code/dynamic_model")
library(Rcpp)
sourceCpp("helper_functions_dynamic_cauchy.cpp")
load("E:/OneDrive/UW_Seattle/paper/Abel/probitUM/data/mqTime.rda")
hyperparams = list(beta_mean = 0, beta_var = 1, alpha_mean = c(0, 0),
delta_mean = c(-2, 10), delta_scale = sqrt(10),
rho_mean = 0.9, rho_sigma = 0.04, rho_sd = 0.1, nu = 1)
iter_config = list(num_iter = 100, start_iter = 0, keep_iter = 1, flip_rate = 0.1)
post_samples = sample_probit_dynamic(mqVotes, mqTime, hyperparams, iter_config,
pos_ind_list = pos_inds, pos_ind_years_list = pos_year_inds,
neg_ind_list = neg_inds, neg_ind_years_list = neg_year_inds)
num_iter = 100
start_iter = 0
keep_iter = 1
flip_rate = 0.1
init_info <- init_data_gp_rcpp(
vote_m, years_v, leg_pos_init = NULL, alpha_pos_init = NULL, delta_pos_init = NULL,
rho_init = NULL, y_star_m_1_init = NULL, y_star_m_2_init = NULL,
y_star_m_3_init = NULL, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list)
vote_m = mqVotes
init_info <- init_data_gp_rcpp(
vote_m, years_v, leg_pos_init = NULL, alpha_pos_init = NULL, delta_pos_init = NULL,
rho_init = NULL, y_star_m_1_init = NULL, y_star_m_2_init = NULL,
y_star_m_3_init = NULL, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list)
years_v = mqTime
init_info <- init_data_gp_rcpp(
vote_m, years_v, leg_pos_init = NULL, alpha_pos_init = NULL, delta_pos_init = NULL,
rho_init = NULL, y_star_m_1_init = NULL, y_star_m_2_init = NULL,
y_star_m_3_init = NULL, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list)
total_iter = (iter_config$num_iter - iter_config$start_iter) %/% iter_config$keep_iter
init_info <- init_data_gp_rcpp(
vote_m, years_v, leg_pos_init = NULL, alpha_pos_init = NULL, delta_pos_init = NULL,
rho_init = NULL, y_star_m_1_init = NULL, y_star_m_2_init = NULL,
y_star_m_3_init = NULL, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list)
pos_ind_list = pos_inds
pos_ind_years_list = pos_year_inds
neg_ind_years_list = neg_year_inds
neg_ind_list = neg_inds
init_info <- init_data_gp_rcpp(
vote_m, years_v, leg_pos_init = NULL, alpha_pos_init = NULL, delta_pos_init = NULL,
rho_init = NULL, y_star_m_1_init = NULL, y_star_m_2_init = NULL,
y_star_m_3_init = NULL, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list)
str(init_info[[1]])
#' @title initialize member and position parameters and get starting points
init_data_gp_rcpp <- function(
vote_m, years_v, leg_pos_init, alpha_pos_init, delta_pos_init, rho_init,
y_star_m_1_init, y_star_m_2_init, y_star_m_3_init, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list) {
judge_start_inds <- rep(0, nrow(vote_m))
judge_end_inds <- rep(0, nrow(vote_m))
case_judge_years_ind_m <- vote_m
years_served <- rep(0, nrow(vote_m))
judge_year_v <- c()
judge_start_inds <- c()
judge_end_inds <- c()
start_ind = 0
end_ind = 0
for (i in 1:nrow(vote_m)) {
interested_inds <- which(!is.na(vote_m[i,]))
case_judge_years_ind_m[i,interested_inds] <-
years_v[interested_inds] - min(years_v[interested_inds])
judge_year_v <-
c(judge_year_v, list(min(years_v[interested_inds]):max(years_v[interested_inds])))
end_ind = start_ind +
max(years_v[interested_inds]) - min(years_v[interested_inds])
judge_start_inds <- c(judge_start_inds, start_ind)
judge_end_inds <- c(judge_end_inds, end_ind)
start_ind = end_ind + 1
}
if (!is.null(leg_pos_init)) {
leg_pos_m <-
matrix(leg_pos_init, nrow = total_iter, ncol = length(leg_pos_init), byrow = T)
} else {
leg_pos_m <- matrix(0, nrow = total_iter, ncol = max(judge_end_inds) + 1)
}
if (!is.null(alpha_pos_init)) {
alpha_pos_m <-
matrix(t(alpha_pos_init), nrow = total_iter, ncol = 2 * ncol(vote_m), byrow = T)
} else {
alpha_pos_m <-
matrix(c(rep(1, ncol(vote_m)),rep(-1, ncol(vote_m))),
nrow = total_iter, ncol = 2 * ncol(vote_m), byrow = T)
}
if (!is.null(delta_pos_init)) {
delta_pos_m <-
matrix(t(delta_pos_init), nrow = total_iter, ncol = 2 * ncol(vote_m), byrow = T)
} else {
delta_pos_m <-
matrix(0, nrow = total_iter, ncol = 2 * ncol(vote_m), byrow = T)
}
if (!is.null(rho_init)) {
rho_v <- rep(rho_init, nrow = total_iter)
} else {
rho_v <- rep(0.9, nrow = total_iter)
}
if (!is.null(y_star_m_1_init)) {
y_star_m_1 <- y_star_m_1_init
y_star_m_2 <- y_star_m_2_init
y_star_m_3 <- y_star_m_3_init
} else {
y_star_info <- init_y_star_m(vote_m)
y_star_m_1 <- y_star_info[[1]]
y_star_m_2 <- y_star_info[[2]]
y_star_m_3 <- y_star_info[[3]]
}
all_params_draw <- cbind(leg_pos_m, alpha_pos_m, delta_pos_m, rho_v)
beta_start_ind = 0;
alpha_start_ind = max(judge_end_inds) + 1;
alpha_2_start_ind = alpha_start_ind + ncol(vote_m);
delta_start_ind = alpha_2_start_ind + ncol(vote_m);
delta_2_start_ind = delta_start_ind + ncol(vote_m);
rho_start_ind = delta_2_start_ind + ncol(vote_m);
pos_ind_judge_list <- vector(mode = "integer")
pos_ind_judge_year_list <- vector(mode = "integer")
if (length(pos_ind_list) > 0) {
for (i in 1:length(pos_ind_list)) {
tmp_judge_list <-
judge_start_inds[pos_ind_list[i]]:
judge_end_inds[pos_ind_list[i]]
tmp_judge_year_list <- judge_year_v[[pos_ind_list[i]]]
if (length(pos_ind_years_list) > 0) {
tmp_judge_list <- tmp_judge_list[pos_ind_years_list[[i]]]
tmp_judge_year_list <-
tmp_judge_year_list[pos_ind_years_list[[i]]]
}
pos_ind_judge_list <- c(pos_ind_judge_list, tmp_judge_list)
pos_ind_judge_year_list <-
c(pos_ind_judge_year_list, tmp_judge_year_list)
}
}
neg_ind_judge_list <- vector(mode = "integer")
neg_ind_judge_year_list <- vector(mode = "integer")
if (length(neg_ind_list) > 0) {
for (i in 1:length(neg_ind_list)) {
tmp_judge_list <-
judge_start_inds[neg_ind_list[i]]:
judge_end_inds[neg_ind_list[i]]
tmp_judge_year_list <- judge_year_v[[neg_ind_list[i]]]
if (length(neg_ind_years_list) > 0) {
tmp_judge_list <- tmp_judge_list[neg_ind_years_list[[i]]]
tmp_judge_year_list <-
tmp_judge_year_list[neg_ind_years_list[[i]]]
}
neg_ind_judge_list <- c(neg_ind_judge_list, tmp_judge_list)
neg_ind_judge_year_list <-
c(neg_ind_judge_year_list, tmp_judge_year_list)
}
}
return(list(all_params_draw, y_star_m_1, y_star_m_2,
y_star_m_3, beta_start_ind,
alpha_start_ind, alpha_2_start_ind,
delta_start_ind, delta_2_start_ind, rho_start_ind,
judge_start_inds, judge_end_inds,
case_judge_years_ind_m, judge_year_v,
pos_ind_judge_list, neg_ind_judge_list,
pos_ind_judge_year_list, neg_ind_judge_year_list))
}
post_samples = sample_probit_dynamic(mqVotes, mqTime, hyperparams, iter_config,
pos_ind_list = pos_inds, pos_ind_years_list = pos_year_inds,
neg_ind_list = neg_inds, neg_ind_years_list = neg_year_inds)
str(vote_m)
is.matrix(vote_m)
is.matrix(init_info[[1]])
is.matrix(init_info[[2]])
is.matrix(init_info[[3]])
is.matrix(init_info[[4]])
is.matrix(init_info[[13]])
is.matrix(diag(2) * (hyperparams$alpha_scale^2))
is.matrix(as.matrix(diag(2) * (hyperparams$alpha_scale^2)))
#' @export
sample_probit_dynamic <- function(
vote_m, years_v, hyperparams, iter_config, pos_ind_list = NULL, neg_ind_list  = NULL,
pos_ind_years_list = NULL, neg_ind_years_list = NULL) {
total_iter = (iter_config$num_iter - iter_config$start_iter) %/% iter_config$keep_iter
init_info <- init_data_gp_rcpp(
vote_m, years_v, leg_pos_init = NULL, alpha_pos_init = NULL, delta_pos_init = NULL,
rho_init = NULL, y_star_m_1_init = NULL, y_star_m_2_init = NULL,
y_star_m_3_init = NULL, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list)
# if (!is.null(start_val)) {
#   init_info[[1]][1,] <- start_val
# }
#Init info
draw_info <- sample_probit_dynamic_rcpp(
vote_m, init_info[[1]], init_info[[2]], init_info[[3]], init_info[[4]],
init_info[[11]], init_info[[12]], years_v,
init_info[[13]], unlist(init_info[[14]]), init_info[[6]], init_info[[7]],
init_info[[8]], init_info[[9]], init_info[[10]],
hyperparams$alpha_mean, as.matrix(diag(2) * (hyperparams$alpha_scale^2)),
hyperparams$delta_mean, as.matrix(diag(2) * (hyperparams$delta_scale^2)),
hyperparams$rho_mean, hyperparams$rho_sigma, hyperparams$rho_sd, hyperparams$nu,
iter_config$num_iter, iter_config$start_iter, iter_config$keep_iter,
iter_config$flip_rate, init_info[[15]], init_info[[16]],
init_info[[17]], init_info[[18]])
all_param_draw = draw_info[[1]]
leg_names <- unlist(sapply(1:nrow(vote_m), function(i) {
sapply(init_info[[14]][[i]], function(year) {
paste(rownames(vote_m)[i], "beta", year, sep = "_")
})
}))
if (is.null(colnames(vote_m))) {
colnames(vote_m) <- sapply(1:ncol(vote_m), function(i) {
paste("vote", i, sep = "_")
})
}
alpha_vote_names_1 <- sapply(colnames(vote_m), function(name) {
paste(name, "alpha", "1", sep = "_")
})
alpha_vote_names_2 <- sapply(colnames(vote_m), function(name) {
paste(name, "alpha", "2", sep = "_")
})
delta_vote_names_1 <- sapply(colnames(vote_m), function(name) {
paste(name, "delta", "1", sep = "_")
})
delta_vote_names_2 <- sapply(colnames(vote_m), function(name) {
paste(name, "delta", "2", sep = "_")
})
colnames(all_param_draw) <-
c(leg_names, alpha_vote_names_1, alpha_vote_names_2,
delta_vote_names_1, delta_vote_names_2, "rho")
beta_list <- as.data.frame(all_param_draw[, leg_names])
alpha1_list <- as.data.frame(all_param_draw[, alpha_vote_names_1])
alpha2_list <- as.data.frame(all_param_draw[, alpha_vote_names_2])
delta1_list <- as.data.frame(all_param_draw[, delta_vote_names_1])
delta2_list <- as.data.frame(all_param_draw[, delta_vote_names_2])
rho_list <- as.data.frame(all_param_draw[, "rho"])
colnames(rho_list) <- "rho"
return(c(list(
beta = beta_list,
alpha1 = alpha1_list,
alpha2 = alpha2_list,
delta1 = delta1_list,
delta2 = delta2_list,
rho = rho_list),
other_info = draw_info[-1]
))
}
post_samples = sample_probit_dynamic(mqVotes, mqTime, hyperparams, iter_config,
pos_ind_list = pos_inds, pos_ind_years_list = pos_year_inds,
neg_ind_list = neg_inds, neg_ind_years_list = neg_year_inds)
as.matrix(diag(2) * (hyperparams$alpha_scale^2))
diag(2) * (hyperparams$alpha_scale^2)
hyperparams$alpha_scale
View(hyperparams)
hyperparams = list(beta_mean = 0, beta_var = 1, alpha_mean = c(0, 0), alpha_scale = 5,
delta_mean = c(-2, 10), delta_scale = sqrt(10),
rho_mean = 0.9, rho_sigma = 0.04, rho_sd = 0.1, nu = 1)
post_samples = sample_probit_dynamic(mqVotes, mqTime, hyperparams, iter_config,
pos_ind_list = pos_inds, pos_ind_years_list = pos_year_inds,
neg_ind_list = neg_inds, neg_ind_years_list = neg_year_inds)
#' @export
sample_probit_dynamic <- function(
vote_m, years_v, hyperparams, iter_config, pos_ind_list = NULL, neg_ind_list  = NULL,
pos_ind_years_list = NULL, neg_ind_years_list = NULL) {
total_iter = (iter_config$num_iter - iter_config$start_iter) %/% iter_config$keep_iter
init_info <- init_data_gp_rcpp(
vote_m, years_v, leg_pos_init = NULL, alpha_pos_init = NULL, delta_pos_init = NULL,
rho_init = NULL, y_star_m_1_init = NULL, y_star_m_2_init = NULL,
y_star_m_3_init = NULL, total_iter,
pos_ind_list, neg_ind_list, pos_ind_years_list, neg_ind_years_list)
# if (!is.null(start_val)) {
#   init_info[[1]][1,] <- start_val
# }
#Init info
draw_info <- sample_probit_dynamic_rcpp(
vote_m, init_info[[1]], init_info[[2]], init_info[[3]], init_info[[4]],
init_info[[11]], init_info[[12]], years_v,
init_info[[13]], unlist(init_info[[14]]), init_info[[6]], init_info[[7]],
init_info[[8]], init_info[[9]], init_info[[10]],
hyperparams$alpha_mean, diag(2) * (hyperparams$alpha_scale^2),
hyperparams$delta_mean, as.matrix(diag(2) * (hyperparams$delta_scale^2)),
hyperparams$rho_mean, hyperparams$rho_sigma, hyperparams$rho_sd, hyperparams$nu,
iter_config$num_iter, iter_config$start_iter, iter_config$keep_iter,
iter_config$flip_rate, init_info[[15]], init_info[[16]],
init_info[[17]], init_info[[18]])
all_param_draw = draw_info[[1]]
leg_names <- unlist(sapply(1:nrow(vote_m), function(i) {
sapply(init_info[[14]][[i]], function(year) {
paste(rownames(vote_m)[i], "beta", year, sep = "_")
})
}))
if (is.null(colnames(vote_m))) {
colnames(vote_m) <- sapply(1:ncol(vote_m), function(i) {
paste("vote", i, sep = "_")
})
}
alpha_vote_names_1 <- sapply(colnames(vote_m), function(name) {
paste(name, "alpha", "1", sep = "_")
})
alpha_vote_names_2 <- sapply(colnames(vote_m), function(name) {
paste(name, "alpha", "2", sep = "_")
})
delta_vote_names_1 <- sapply(colnames(vote_m), function(name) {
paste(name, "delta", "1", sep = "_")
})
delta_vote_names_2 <- sapply(colnames(vote_m), function(name) {
paste(name, "delta", "2", sep = "_")
})
colnames(all_param_draw) <-
c(leg_names, alpha_vote_names_1, alpha_vote_names_2,
delta_vote_names_1, delta_vote_names_2, "rho")
beta_list <- as.data.frame(all_param_draw[, leg_names])
alpha1_list <- as.data.frame(all_param_draw[, alpha_vote_names_1])
alpha2_list <- as.data.frame(all_param_draw[, alpha_vote_names_2])
delta1_list <- as.data.frame(all_param_draw[, delta_vote_names_1])
delta2_list <- as.data.frame(all_param_draw[, delta_vote_names_2])
rho_list <- as.data.frame(all_param_draw[, "rho"])
colnames(rho_list) <- "rho"
return(c(list(
beta = beta_list,
alpha1 = alpha1_list,
alpha2 = alpha2_list,
delta1 = delta1_list,
delta2 = delta2_list,
rho = rho_list),
other_info = draw_info[-1]
))
}
post_samples = sample_probit_dynamic(mqVotes, mqTime, hyperparams, iter_config,
pos_ind_list = pos_inds, pos_ind_years_list = pos_year_inds,
neg_ind_list = neg_inds, neg_ind_years_list = neg_year_inds)
document()
document()
